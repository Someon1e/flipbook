name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: Roblox/setup-foreman@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint
        run: |
          selene generate-roblox-std
          selene src/

      - name: Format
        run: stylua --check src/

      - name: Install dependencies
        run: wally install

      - name: Get model file name
        run: |
          name=$(jq -r .name default.project.json)
          sha=${GITHUB_SHA:0:7}
          echo "MODEL_FILE=$name-$sha.rbxm" >> $GITHUB_ENV

      - name: Build
        run: rojo build -o ${{ env.MODEL_FILE }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.MODEL_FILE }}
          path: ${{ env.MODEL_FILE }}

  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: Roblox/setup-foreman@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: wally install

      - name: Download global Roblox types
        shell: bash
        run: curl -s -O https://raw.githubusercontent.com/JohnnyMorganz/luau-lsp/master/scripts/globalTypes.d.lua

      - name: Generate sourcemap for LSP
        shell: bash
        run: rojo sourcemap dev.project.json -o sourcemap.json

      - name: Analyze
        shell: bash
        run: luau-lsp analyze --sourcemap=sourcemap.json --defs=globalTypes.d.lua --defs=testez.d.lua --ignore=**/_Index/** src/

  scripts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Ensure each script is executable
        run: |
          for f in ./bin/*; do
              if [[ ! -x "$f" ]]; then
                  echo "Script '$f' is not executable"
                  exit 1
              fi
          done


  tests:
    runs-on: windows-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: Check for ROBLOSECURITY token
        shell: bash
        run: ./.github/workflows/validate-secret.sh ROBLOSECURITY "${{ secrets.ROBLOSECURITY }}"

      - name: Check for RBXID token
        shell: bash
        run: ./.github/workflows/validate-secret.sh RBXID "${{ secrets.RBXID }}"

      - uses: Roblox/setup-foreman@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: wally install

      - name: Build place file
        run: rojo build dev.project.json -o studio-tests.rbxl

      - name: Install Mullvad
        run: choco install mullvad-app

      - name: Update path with Mullvad executable
        run: Add-Content $env:GITHUB_PATH "C:\Program Files\Mullvad VPN\resources"

      - name: Connect to Mullvad
        run: |
          mullvad.exe account login ${{ secrets.MULLVAD_ACCOUNT }}
          mullvad.exe relay set hostname us-sjc-ovpn-001
          mullvad.exe connect

      - name: Install Roblox Studio
        uses: OrbitalOwen/roblox-win-installer-action@1.1
        with:
          cookie: ${{ env.ROBLOSECURITY }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add RBXID to the Windows registry
        run: REG ADD HKCU\Software\RobloxStudioBrowser\roblox.com /t REG_SZ /v .RBXID /d "${{ secrets.RBXID }}"

      - name: Run tests
        run: run-in-roblox --place studio-tests.rbxl --script tests/init.server.lua

      - name: Screenshot
        if: failure()
        uses: OrbitalOwen/desktop-screenshot-action@0.1
        with:
          file-name: 'roblox-studio-${{ github.run_id }}.jpg'
