"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[459],{6564:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var t=n(4848),i=n(8453);const s={sidebar_position:5},r="Contributing",l={id:"contributing",title:"Contributing",description:"Thank you for your interest in contributing to this repository! This guide will help you get your environment setup so you can have the best possible development experience.",source:"@site/docs/contributing.md",sourceDirName:".",slug:"/contributing",permalink:"/flipbook/docs/contributing",draft:!1,unlisted:!1,editUrl:"https://github.com/flipbook-labs/flipbook/tree/main/docs/docs/docs/contributing.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docs",previous:{title:"Migrating from Hoarcekat",permalink:"/flipbook/docs/migrating"}},d={},a=[{value:"Onboarding",id:"onboarding",level:2},{value:"Using flipbook to develop flipbook",id:"using-flipbook-to-develop-flipbook",level:2},{value:"Testing",id:"testing",level:2}];function u(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"contributing",children:"Contributing"}),"\n",(0,t.jsx)(o.p,{children:"Thank you for your interest in contributing to this repository! This guide will help you get your environment setup so you can have the best possible development experience."}),"\n",(0,t.jsx)(o.h2,{id:"onboarding",children:"Onboarding"}),"\n",(0,t.jsxs)(o.p,{children:["We use ",(0,t.jsx)(o.a,{href:"https://code.visualstudio.com/",children:"Visual Studio Code"})," to work on this project, so you'll get the best mileage from using it too. We also have several ",(0,t.jsx)(o.a,{href:"https://github.com/flipbook-labs/flipbook/blob/main/.vscode/extensions.json",children:"recommended extensions"})," that should be installed."]}),"\n",(0,t.jsxs)(o.p,{children:["You will also need ",(0,t.jsx)(o.a,{href:"https://github.com/casey/just",children:"Just"})," for running commands, and ",(0,t.jsx)(o.a,{href:"https://github.com/Roblox/foreman/",children:"Foreman"}),"\nfor installing pinned tool versions."]}),"\n",(0,t.jsx)(o.p,{children:"With the above requirements satisfied, run the following commands from your clone of the repo to start developing:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-sh",children:"# Install tools and packages that the project depends on\njust init\n\n# Build the plugin to Studio\njust build\n"})}),"\n",(0,t.jsx)(o.admonition,{type:"tip",children:(0,t.jsxs)(o.p,{children:["When using VSCode, you can press ",(0,t.jsx)(o.code,{children:"Ctrl+Shift+B"})," on Windows or ",(0,t.jsx)(o.code,{children:"Cmd+Shift+B"})," on MacOS to execute the included build task which will build the flipbook plugin for your OS."]})}),"\n",(0,t.jsx)(o.p,{children:"Once built, open up a Baseplate to start interacting with the plugin."}),"\n",(0,t.jsx)(o.h2,{id:"using-flipbook-to-develop-flipbook",children:"Using flipbook to develop flipbook"}),"\n",(0,t.jsx)(o.p,{children:"flipbook is made up of Roact components, each of which has a story file. This means you can use flipbook itself for developing it."}),"\n",(0,t.jsx)(o.p,{children:'Once you have flipbook built, navigate to the Studio settings and turn on "Plugin Debugging Enabled."'}),"\n",(0,t.jsx)(o.p,{children:(0,t.jsx)(o.img,{alt:"Screenshot of the Studio settings showing the Plugin Debugging Enabled option",src:n(3870).A+"",width:"1654",height:"1110"})}),"\n",(0,t.jsx)(o.p,{children:"Then load a new Baseplate and open the flipbook plugin. Its storybook should now appear in the sidebar."}),"\n",(0,t.jsx)(o.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsxs)(o.p,{children:["While developing, you should also be writing unit tests. Unit tests are written in ",(0,t.jsx)(o.code,{children:".spec.luau"})," files. You can see examples of this throughout the repository's codebase."]}),"\n",(0,t.jsx)(o.p,{children:"To run tests, simply start the experience in Studio. You will see in the output if tests are passing or failing."}),"\n",(0,t.jsx)(o.p,{children:"If your code is not properly tested, maintainers will let you know and offer suggestions on how to improve your tests so you can get your pull request merged."})]})}function c(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},3870:(e,o,n)=>{n.d(o,{A:()=>t});const t=n.p+"assets/images/plugin-debugging-enabled-6ecc8a46e76e2ee9b039603fe9924953.png"},8453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>l});var t=n(6540);const i={},s=t.createContext(i);function r(e){const o=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:o},e.children)}}}]);